# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master and dev branches
  push:
    branches:
      - master
      - dev
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    types:
      - assigned
      - opened
      - edited
      - reopened
      - synchronize
    branches: 
      - master 
      - dev 
    paths-ignore:
      - 'docs/**'
      - '**.md'

env: 
  CACHE_NUMBER: 1

jobs:
  ################################################################################
  # environment setup
  ################################################################################
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srbench
          use-mamba: true
      - 
        name: Cache conda
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda3/envs/srbench
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{hashFiles('environment.yml','experiment/methods/src/*.sh')}}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml','experiment/methods/src/*.sh') }}
        id: cache
      - 
        name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: | 
          mamba env update -n srbench -f environment.yml 
          # look at cache
          python -m pip cache list 
          # look at cache
          python -m pip cache list --format=abspath
          # turn off pip cache-dir
          python -m pip config set global.no-cache-dir false
      - 
        name: Install SR methods
        run: |
          mamba run -n srbench bash install.sh
  ################################################################################
  # tests
  ################################################################################
  test_setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      matrix-tuned: ${{ steps.set-matrix-tuned.outputs.matrix }}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: generate alg list
        run: bash ci/get_algorithm_list.sh
      - 
        id: set-matrix
        run: |
          echo "::set-output name=matrix::$(cat ci/algs.json)"
      - 
        id: set-matrix-tuned
        run: |
          echo "::set-output name=matrix::$(cat ci/algs-tuned.json)"
  test_evaluate:
    runs-on: ubuntu-latest
    needs: 
      - build
      - test_setup
    strategy:
      matrix: ${{fromJSON(needs.test_setup.outputs.matrix)}}
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srbench
          use-mamba: true
      - 
        name: Cache conda
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda3/envs/srbench
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml','experiment/methods/src/*.sh') }}-${{ github.sha }}
        id: cache
      - 
        name: Evaluate Model
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          cd experiment
          conda env list
          conda info
          mamba run -n srbench python -m pytest -v test_evaluate_model.py --ml ${{ matrix.ml }}
      - 
        name: Check Cache Hit
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Didn't find the cache for the srbench environment :("
          conda info --envs

  test_tuned:
    runs-on: ubuntu-latest
    needs: 
      - build
      - test_setup
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix: ${{fromJSON(needs.test_setup.outputs.matrix-tuned)}}
      fail-fast: false
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: srbench
          use-mamba: true
      - 
        name: Cache conda
        uses: actions/cache@v3
        with:
          path: /usr/share/miniconda3/envs/srbench
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.yml','experiment/methods/src/*.sh') }}-${{ github.sha }}
        id: cache
      - 
        name: Evaluate Tuned Model
        if: steps.cache.outputs.cache-hit == 'true'
        run: |
          cd experiment
          conda info
          mamba run -n srbench python -m pytest -v test_tuned_models.py --ml ${{ matrix.ml }}
      - 
        name: Check Cache Hit
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo "Didn't find the cache for the srbench environment :("
          conda info --envs
